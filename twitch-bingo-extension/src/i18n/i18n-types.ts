// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */

import type { LocalizedString } from 'typesafe-i18n'

export type BaseLocale = 'en'

export type Locales =
	| 'en'
	| 'fr'

export type Translation = {
	'Mobile': {	
		/**
		 * Confirm
		 */
		'ConfirmButton': string
		/**
		 * Cancel
		 */
		'CancelButton': string
		/**
		 * Missed
		 */
		'MissedLabel': string
		/**
		 * Pending
		 */
		'PendingLabel': string
	}
	'OverlayBingoGrid': {	
		/**
		 * Waiting for the game to start !
		 */
		'WaitingMessage': string
		/**
		 * In order to join the game and get your own Bingo grid, you need to share your Twitch username with the extension.
		 */
		'IdentityPromptMessage': string
		/**
		 * Share
		 */
		'ShareIdentityButtonLabel': string
	}
	'BingoViewerEntry': {	
		/**
		 * Confirm
		 */
		'ConfirmButtonLabel': string
		/**
		 * Missed
		 */
		'MissedRibbonLabel': string
	}
	'BingoModeration': {	
		/**
		 * Confirm
		 */
		'ConfirmButtonLabel': string
		/**
		 * Confirm
		 */
		'ConfirmButton': string
		/**
		 * No entries configured.
		 */
		'NoEntriesMessage': string
	}
	'Config': {	
		/**
		 * Configure Grid
		 */
		'ConfigureGrid': string
		/**
		 * Columns
		 */
		'Columns': string
		/**
		 * Rows
		 */
		'Rows': string
		/**
		 * Not enough entries to fill the grid !
		 */
		'AlertNotEnoughEntriesToFillTheGrid': string
		/**
		 * Add entries or reduce grid dimensions to start the game.
		 */
		'AddEntriesOrReduceGridDimensionsToStartTheGame': string
		/**
		 * Confirmation time
		 */
		'ConfirmationTime': string
		/**
		 * Save
		 */
		'SaveGame': string
		/**
		 * Start
		 */
		'StartGame': string
		'LibraryEditor': {	
			/**
			 * Library
			 */
			'Title': string
			/**
			 * Load or add all your bingo entries here.
			 */
			'TitleSubHeader': string
			/**
			 * No items in Bingo, go add some !
			 */
			'MessageNoItems': string
			/**
			 * Upload entry list
			 */
			'UploadButtonLabel': string
			/**
			 * Replace entries by uploading a .txt file
			 */
			'UploadButtonTitle': string
			/**
			 * Add a new entry
			 */
			'AddEntryButtonLabel': string
			/**
			 * Add a new entry to the list
			 */
			'AddEntryButtonTitle': string
		}
		'StatusCard': {	
			/**
			 * Status
			 */
			'Title': string
			/**
			 * Active
			 */
			'StatusActive': string
			/**
			 * Inactive
			 */
			'StatusInactive': string
			/**
			 * Stop game
			 */
			'StopButton': string
			/**
			 * Loading configuration ...
			 */
			'LoadingConfiguration': string
		}
		'GameLog': {	
			/**
			 * Game Log
			 */
			'Header': string
			/**
			 * Game started !
			 */
			'StartedGameText': string
			/**
			 * #{entryKey} “{entryText}” confirmed by {playerNames}
			 * @param {unknown} entryKey
			 * @param {unknown} entryText
			 * @param {unknown} playerNames
			 */
			'ConfirmationText': RequiredParams3<'entryKey', 'entryText', 'playerNames'>
			/**
			 * #{entryKey} completed columns for {playersCount} players
			 * @param {unknown} entryKey
			 * @param {unknown} playersCount
			 */
			'CompletedColText': RequiredParams2<'entryKey', 'playersCount'>
			/**
			 * #{entryKey} completed rows for {playersCount} players
			 * @param {unknown} entryKey
			 * @param {unknown} playersCount
			 */
			'CompletedRowText': RequiredParams2<'entryKey', 'playersCount'>
			/**
			 * #{entryKey} completed the grid for {playersCount} players
			 * @param {unknown} entryKey
			 * @param {unknown} playersCount
			 */
			'CompletedGridText': RequiredParams2<'entryKey', 'playersCount'>
		}
		'EntrySelectionView': {	
			/**
			 * Selection
			 */
			'Title': string
			/**
			 * These are the bingo entries currently selected for the next game.
			 */
			'TitleSubHeader': string
			/**
			 * No items selected
			 */
			'NoItemMessage': string
		}
		'EditableBingoEntry': {	
			/**
			 * Bingo proposition
			 */
			'TextFieldLabel': string
			/**
			 * Proposition
			 */
			'TextFieldPlaceholder': string
			/**
			 * Delete this entry
			 */
			'DeleteLabel': string
			/**
			 * Cannot delete a selected entry
			 */
			'DeleteLabelCantRemove': string
			/**
			 * Add to selection
			 */
			'AddSelectionLabel': string
			/**
			 * Edit this entry
			 */
			'EditLabel': string
		}
		/**
		 * Chat integration is enabled
		 */
		'DeactivateChatIntegrationTitle': string
		/**
		 * You can disable chat integration by going to your “My Extensions” panel, and clicking “Manage Permissions”.
		 */
		'DeactivateChatIntegrationText': string
		/**
		 * Chat integration is disabled
		 */
		'ActivateChatIntegrationTitle': string
		/**
		 * You can allow chat integration by going to your “My Extensions” panel, and clicking “Manage Permissions”.
		 */
		'ActivateChatIntegrationText': string
	}
}

export type TranslationFunctions = {
	'Mobile': {	
		/**
		 * Confirm
		 */
		'ConfirmButton': () => LocalizedString
		/**
		 * Cancel
		 */
		'CancelButton': () => LocalizedString
		/**
		 * Missed
		 */
		'MissedLabel': () => LocalizedString
		/**
		 * Pending
		 */
		'PendingLabel': () => LocalizedString
	}
	'OverlayBingoGrid': {	
		/**
		 * Waiting for the game to start !
		 */
		'WaitingMessage': () => LocalizedString
		/**
		 * In order to join the game and get your own Bingo grid, you need to share your Twitch username with the extension.
		 */
		'IdentityPromptMessage': () => LocalizedString
		/**
		 * Share
		 */
		'ShareIdentityButtonLabel': () => LocalizedString
	}
	'BingoViewerEntry': {	
		/**
		 * Confirm
		 */
		'ConfirmButtonLabel': () => LocalizedString
		/**
		 * Missed
		 */
		'MissedRibbonLabel': () => LocalizedString
	}
	'BingoModeration': {	
		/**
		 * Confirm
		 */
		'ConfirmButtonLabel': () => LocalizedString
		/**
		 * Confirm
		 */
		'ConfirmButton': () => LocalizedString
		/**
		 * No entries configured.
		 */
		'NoEntriesMessage': () => LocalizedString
	}
	'Config': {	
		/**
		 * Configure Grid
		 */
		'ConfigureGrid': () => LocalizedString
		/**
		 * Columns
		 */
		'Columns': () => LocalizedString
		/**
		 * Rows
		 */
		'Rows': () => LocalizedString
		/**
		 * Not enough entries to fill the grid !
		 */
		'AlertNotEnoughEntriesToFillTheGrid': () => LocalizedString
		/**
		 * Add entries or reduce grid dimensions to start the game.
		 */
		'AddEntriesOrReduceGridDimensionsToStartTheGame': () => LocalizedString
		/**
		 * Confirmation time
		 */
		'ConfirmationTime': () => LocalizedString
		/**
		 * Save
		 */
		'SaveGame': () => LocalizedString
		/**
		 * Start
		 */
		'StartGame': () => LocalizedString
		'LibraryEditor': {	
			/**
			 * Library
			 */
			'Title': () => LocalizedString
			/**
			 * Load or add all your bingo entries here.
			 */
			'TitleSubHeader': () => LocalizedString
			/**
			 * No items in Bingo, go add some !
			 */
			'MessageNoItems': () => LocalizedString
			/**
			 * Upload entry list
			 */
			'UploadButtonLabel': () => LocalizedString
			/**
			 * Replace entries by uploading a .txt file
			 */
			'UploadButtonTitle': () => LocalizedString
			/**
			 * Add a new entry
			 */
			'AddEntryButtonLabel': () => LocalizedString
			/**
			 * Add a new entry to the list
			 */
			'AddEntryButtonTitle': () => LocalizedString
		}
		'StatusCard': {	
			/**
			 * Status
			 */
			'Title': () => LocalizedString
			/**
			 * Active
			 */
			'StatusActive': () => LocalizedString
			/**
			 * Inactive
			 */
			'StatusInactive': () => LocalizedString
			/**
			 * Stop game
			 */
			'StopButton': () => LocalizedString
			/**
			 * Loading configuration ...
			 */
			'LoadingConfiguration': () => LocalizedString
		}
		'GameLog': {	
			/**
			 * Game Log
			 */
			'Header': () => LocalizedString
			/**
			 * Game started !
			 */
			'StartedGameText': () => LocalizedString
			/**
			 * #{entryKey} “{entryText}” confirmed by {playerNames}
			 */
			'ConfirmationText': (arg: { entryKey: unknown, entryText: unknown, playerNames: unknown }) => LocalizedString
			/**
			 * #{entryKey} completed columns for {playersCount} players
			 */
			'CompletedColText': (arg: { entryKey: unknown, playersCount: unknown }) => LocalizedString
			/**
			 * #{entryKey} completed rows for {playersCount} players
			 */
			'CompletedRowText': (arg: { entryKey: unknown, playersCount: unknown }) => LocalizedString
			/**
			 * #{entryKey} completed the grid for {playersCount} players
			 */
			'CompletedGridText': (arg: { entryKey: unknown, playersCount: unknown }) => LocalizedString
		}
		'EntrySelectionView': {	
			/**
			 * Selection
			 */
			'Title': () => LocalizedString
			/**
			 * These are the bingo entries currently selected for the next game.
			 */
			'TitleSubHeader': () => LocalizedString
			/**
			 * No items selected
			 */
			'NoItemMessage': () => LocalizedString
		}
		'EditableBingoEntry': {	
			/**
			 * Bingo proposition
			 */
			'TextFieldLabel': () => LocalizedString
			/**
			 * Proposition
			 */
			'TextFieldPlaceholder': () => LocalizedString
			/**
			 * Delete this entry
			 */
			'DeleteLabel': () => LocalizedString
			/**
			 * Cannot delete a selected entry
			 */
			'DeleteLabelCantRemove': () => LocalizedString
			/**
			 * Add to selection
			 */
			'AddSelectionLabel': () => LocalizedString
			/**
			 * Edit this entry
			 */
			'EditLabel': () => LocalizedString
		}
		/**
		 * Chat integration is enabled
		 */
		'DeactivateChatIntegrationTitle': () => LocalizedString
		/**
		 * You can disable chat integration by going to your “My Extensions” panel, and clicking “Manage Permissions”.
		 */
		'DeactivateChatIntegrationText': () => LocalizedString
		/**
		 * Chat integration is disabled
		 */
		'ActivateChatIntegrationTitle': () => LocalizedString
		/**
		 * You can allow chat integration by going to your “My Extensions” panel, and clicking “Manage Permissions”.
		 */
		'ActivateChatIntegrationText': () => LocalizedString
	}
}

export type Formatters = {}

type Param<P extends string> = `{${P}}`

type Params2<P1 extends string, P2 extends string> =
	`${string}${Param<P1>}${string}${Param<P2>}${string}`

type Params3<P1 extends string, P2 extends string, P3 extends string> =
	`${string}${Param<P1>}${string}${Param<P2>}${string}${Param<P3>}${string}`

type RequiredParams2<P1 extends string, P2 extends string> =
	| Params2<P1, P2>
	| Params2<P2, P1>

type RequiredParams3<P1 extends string, P2 extends string, P3 extends string> =
	| Params3<P1, P2, P3>
	| Params3<P1, P3, P2>
	| Params3<P2, P1, P3>
	| Params3<P2, P3, P1>
	| Params3<P3, P1, P2>
	| Params3<P3, P2, P1>
